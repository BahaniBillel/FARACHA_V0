// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Define the user table
model User {
  id        String    @id @default(uuid())
  firstName String
  lastName  String
  email     String    @unique
  password  String
  isAdmin   Boolean   @default(false)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  orders    Order[]
  addresses Address[]
  Review    Review[]
}

// Define the order table
model Order {
  id        String      @id @default(uuid())
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  status    String
  total     Float
  user      User        @relation(fields: [userId], references: [id])
  userId    String
  items     OrderItem[]
}

// Define the order item table
model OrderItem {
  id          String   @id @default(uuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  name        String
  description String?
  price       Float
  quantity    Int
  order       Order    @relation(fields: [orderId], references: [id])
  orderId     String
}

// Define the product table
model Product {
  id          String   @id @default(uuid())
  name        String
  description String?
  price       Float
  image       String
  category    String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  reviews     Review[]
  brand       Brand    @relation(fields: [brandId], references: [id])
  brandId     String
}

// Define the review table
model Review {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  text      String
  rating    Float
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  product   Product  @relation(fields: [productId], references: [id])
  productId String
}

// Define the brand table
model Brand {
  id          String    @id @default(uuid())
  name        String
  description String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  products    Product[]
}

// Define the address table
model Address {
  id           String   @id @default(uuid())
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  name         String
  addressLine1 String
  addressLine2 String?
  city         String
  state        String
  country      String
  postalCode   String
  user         User     @relation(fields: [userId], references: [id])
  userId       String
}
